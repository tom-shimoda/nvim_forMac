# --- neosnippet
[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_event = 'InsertEnter' # load plug when enter insert mode
on_ft = ['snippet']
depends = ['neosnippet-snippets']
hook_source = '''
    " SuperTab like snippets behavior.
    " Note: It must be "imap" and "smap".  It uses <Plug> mappings.

    "imap <expr><TAB> pumvisible() ? "\<C-n>" : neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
    "imap <expr><CR> (pumvisible() && neosnippet#expandable()) ? "\<Plug>(neosnippet_expand_or_jump)" : "\<CR>"
    "smap <expr><TAB> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
'''

# --- omnisharp-vim
[[plugins]]
repo = 'OmniSharp/omnisharp-vim'
on_ft = ["cs"]
hook_source = '''
    "let g:OmniSharp_translate_cygwin_wsl = 1
    let g:OmniSharp_highlighting = 3
    " Don't use mono in roslyn.
    let g:OmniSharp_server_use_mono = 1
    augroup omnisharp_commands
        "autocmd CursorHold *.cs OmniSharpTypeLookup
        autocmd FileType cs nmap <silent> <buffer> gd :OmniSharpGotoDefinition<CR>
        autocmd FileType cs nmap <silent> <buffer> gr :OmniSharpFindUsages<CR>
        autocmd FileType cs nmap <silent> <buffer> <A-Enter> :OmniSharpGetCodeActions<CR>
        autocmd FileType cs nmap <silent> <buffer> gh :OmniSharpDocumentation<CR>
        autocmd FileType cs nmap <silent> <buffer> gs :OmniSharpSignatureHelp<CR>
        autocmd FileType cs nmap <silent> <buffer> == :OmniSharpCodeFormat<CR>
        autocmd FileType cs nmap <silent> <buffer> <F8> :OmniSharpHighlightEcho<CR>
        autocmd FileType cs nmap <silent> <buffer> <Space>r :OmniSharpRename<CR>
    augroup END

    let g:OmniSharp_highlight_groups = {
    \ 'Identifier': 'Normal',
    \ 'StaticSymbol': 'Normal',
    \ 'ClassName': 'Yellow',
    \ 'DelegateName': 'Yellow',
    \ 'EnumName': 'Aqua',
    \ 'StructName': 'Aqua',
    \ 'FieldName': 'Normal',
    \ 'EnumMemberName': 'Normal',
    \ 'ConstantName': 'Normal',
    \ 'LocalName': 'Blue',
    \ 'ParameterName': 'Grey',
    \ 'PropertyName': 'Normal',
    \ 'EventName': 'Normal',
    \ 'NamespaceName': 'Normal',
    \ 'XmlDocCommentName': 'Comment',
    \ 'StringLiteral': 'Grey',
    \}
'''

# --- rust.vim
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ["rs"]
hook_source = '''
    let g:rustfmt_autosave = 1
'''
